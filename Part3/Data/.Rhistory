filter(class=='suv')
mpg_a <- mpg %>%
filter(class=='suv') %>%
filter(class=='compact')
mpg_a <- mpg %>%
filter(class=='suv') %>%
filter(class=='compact');mpg_a
pg_a <- mpg %>%
filter(class=='suv') %>%
filter(class=='compact');mpg_a
mpg_a
mpg_a <- mpg %>%
select(suv)
mpg_a <- mpg %>%
select('suv')
mpg_a <- mpg %>%
select(class==suv)
mpg_a <- mpg %>%
select(class,cty)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)%>%
head(5)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)%>%
print(5)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)%>%
head(5)
head(5)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange('hwy')
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange($hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
select(mpg_audi,hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
select(mpg,hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(mpg_audi,hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg-audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy);mpg_audi1
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)%>% head(5) ;mpg_audi1
mpg_audi <- mpg %>%
filter(manufacturer == "audi")
mpg_toyota <- mpg %>%
filter(manufacturer == "toyota")
mean(mpg_audi$cty)
mean(mpg_toyota$cty)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
mpg_a <- mpg %>%
select(class,cty)
mpg_a <- mpg %>%
select(class,cty);mpg_a
mpg_a <- mpg %>%
select(class=='suv')
mpg_a <- mpg %>%
select(mpg_new)
mpg0 <- cp mpg
mpg0 <- cp mpg.data1
.data1
cp mpg
cp.mpg
mpg <- as.data.frame(ggplot2::mpg)  # mpg 데이터 불러오기
df <- mpg %>% select(class, cty)    # class, cty 변수 추출
head(df)
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(desc(hwy))%>% head(5) ;mpg_audi1
mpg_new <- mpg                                    # 복사본 만들기
mpg_new <- mpg_new %>% mutate(total = cty + hwy)  # 합산 변수 만들기
mpg_new <- mpg_new %>% mutate(mean = total/2)
mpg_new <- mpg_new %>% mutate(mean = total/2) ; mpg_new
arrange(desk(mean)) %>% head(3)
arrange(desc(mean)) %>% head(3)
mpg_new %>%
arrange(desc(mean)) %>% head(3)
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T)) %>%
arrange(desc(mean))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T)) %>%
arrange(desc(cty))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T)) %>%
arrange(desc(mean))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T)) %>%
arrange(desc(mean_cty))
mpg %>%
group_by(class) %>%
summarise(mean_cty = mean(cty,na.rm=T)) %>%
arrange(desc(mean_cty))
mpg %>%
group_by(manufacturer) %>%
summarise(avarage=mean(hwy,na.rm=T))
mpg %>%
group_by(manufacturer) %>%
summarise(avarage=mean(hwy,na.rm=T))%>%
head(3)
mpg %>%
group_by(manufacturer) %>%
summarise(count_n(),compact)
mpg %>%
group_by(manufacturer) %>%
summarise(count.n(),compact)
mpg %>%
group_by(manufacturer) %>%
summarise(count=n(),compact)
mpg %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
filter('compact')
mpg %>%
group_by(manufacturer) %>%
filter('compact') %>%
summarise(count=n())%>%
mpg %>%
group_by(manufacturer) %>%
filter('compact') %>%
summarise(count=n())%>%
arrange(desc(n))
mpg %>%
group_by(manufacturer) %>%
filter('compact') %>%
summarise(count=n())%>%
arrange(desc(mean))
mpg %>%
group_by(manufacturer) %>%
filter('compact') %>%
summarise(count=n())%>%
arrange(desc(count))
mpg %>%
filter('compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
source('~/.active-rstudio-document', encoding = 'UTF-8')
mpg %>%
filter('compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
data2 <- mpg %>%
filter(displ<=4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3 <- mpg %>%
filter(displ>=5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
mpg_audi <- mpg %>%
filter(manufacturer == "audi")
mpg_toyota <- mpg %>%
filter(manufacturer == "toyota")
mean(mpg_audi$cty)
mean(mpg_toyota$cty)
mpg_4 %>%
filter(class %in% c('suv','compact')) %>%
group_by(class)  %>%
summarise(average=mean(cty))
mpg_new %>%
filter(class %in% c('suv','compact')) %>%
group_by(class)  %>%
summarise(average=mean(cty))
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(desc(hwy))%>% head(5) ;mpg_audi1
mpg %>%
filter(manufacturer == 'audi') %>%
select(manufacturer,model,hwy) %>%
arrange(desc(hwy)) %>%
head(5)
mpg %>%
group_by(manufacturer) %>%
summarise(avarage=mean(hwy,na.rm=T))%>%
arrange(desc(avarage)) %>%
head(3)
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
install.packages("reshape2")
library(reshape2)
fruits
fruits
library(reshape2)
library('freshape2')
library('reshape2')
fruits
install.packages("reshape2")
install.packages("reshape2")
library('reshape2')
fruits
frui
fruits
library("reshape2")
fruits
install.packages("googleVis")
library(googleVis)
fruits
fruits
library(reshape2)
fruits
print fruits
print(fruits)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
fruits
install.packages("reshape2")
library(reshape2)
fruits
Fruits
Fruits
library(googleVis)
Fruits
fruits
melt(fruits,id='year')
melt(Fruits,id='year')
melt(Fruits,id=year)
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
fruits
Fruits
library(googleVis)
Fruits
fruits
fruits
melt(Fruits,id='year')
Fruits
melt(Fruits,id='year')
melt(Fruits,id='Year')
melt(fruits.id=c('year','name'))
melt(Fruits.id=c('Year','Name'))
melt(Fruits.id=c('Year','name'))
melt(Fruits.id=c('year','name'))
melt(fruits.id=c('year','name'))
fruits_10
fruits_10
read.csv(fruits_10)
read.csv(fruits_10.csv)
read.csv(fruits_10.csv)
read.csv(Fruits_10.csv)
read.csv(fruits_10.csv)
library(reshape2)
Fruits
fruits
install.packages("reshape2")
install.packages("reshape2")
install.packages("stringr")
library(stringr)
fruits<-c('apple','Apple','banana','pineapple')
str_detect(fruits,'A')
str_detect(fruits,'^a')
str_detect(fruits,'e$')
str_detect(fruits,'^[aA]')
str_detect(fruits,'a')
str_detect(fruits,'[aA]')
str_detect(fruits.ignore.case('a'))
str_detect(fruits.ignore.case("a"))
str_detect(fruits,ignore.case("a"))
str_detect(fruits,ignore.case('a'))
str_detect(ignore.case('a'))
str_detect(fruits,ignore.case(a))
str_detect(fruits,regex('a'),ignore.case=T)
str_detect(fruits,regex'a',ignore.case=T)
str_detect(fruits,regex('a',ignore.case=T)
str_detect(fruits,regex('a',ignore.case=T))
str_detect(fruits, regex('a', ignore.case=T))
str_detect(fruits, regex('a', ignore_case=T))
str_detect(fruits,ignore_case('a'))
str_detect(fruits,ignore_case'a')
str_detect(fruits, regex('a', ignore_case=T))
fruits
str_count()
str_count(fruits.ignore_case('a')
str_count(fruits,'a')
str_count(fruits, 'a')
str_count(fruits.ignore_case('a')
str_count(fruits.ignore_case 'a')
str_count(fruits.ignore.case 'a')
str_c("apple","banana")
str_c("Fruits: ",fruits)
str_c(fruits," name is ",fruits)
str_c(fruits,collapse="")
str_c(fruits,collapse="-")
str_c(fruits,collapse="&")
str_c(fruits,collapse="-")
str_dup(fruits,3)
str_dup(fruits,2)
str_length('apple')
str_length('fruits')
str_length(fruits)
str_length('fruits')
str_dup(fruits,3)
str_length('apple')
str_length('fruits')
str_length(fruits)
str_locate('apple','a')
str_length('과일')
str_locate(fruits,'a')
str_locate('apple','app')
str_replace('apple','p','*')
str_replace('apple','p','**')
str_replace_all('apple','p','*')
fruits <- str_c('apple','/','orange','/','banana')
fruits <- str_c('apple','/','orange','/','banana');fruits
str_split(fruits,"/")
fruits
str_sub(fruits,start=1,end=3)
str_sub(fruits,start=6,end=9)
str_sub(fruits,start=-5)
str_trim('apple banana berry')
str_trim('  apple banana berry  ')
str_sub(fruits,start=7)
str_trim('\t   apple banana berry  ')
str_trim('  apple banana berry  \n  apple banana berry  ')
apple banana berry
str_trim('  apple banana berry  \n  ')
source('~/.active-rstudio-document', encoding = 'UTF-8')
matr
season2 <- rbind(mat,c('초봄','초가을'))
mat
season2 <- rbind(mat,c('초봄','초가을'))
season <- matrix (c('봄','여름','가을','겨울'),nrow=2,);season
season <- matrix (c('봄','여름','가을','겨울'),nrow=2,byrow=T);season
2
season[,2]
3
mat<-
season2 <- rbind(mat,c('초봄','초가을'))
season2 <- rbind(mat,c('초봄','초가을'))
season2 <- rbind(season,c('초봄','초가을'))
season2 <- rbind(season,c('초봄','초가을'));season2
season3 <- cbind(season,c('초여름','초겨울','한겨울'))
season3 <- cbind(season2,c('초여름','초겨울','한겨울'));season3
read.csv(data1.csv)
data1 <- read.csv(data1.csv)
data1 <- read.csv('data1.csv')
data1 <- read.csv('data1.csv') ;data1
apply(sum(2:15))
install.packages(sqldf)
library(sqldf)
install.packages('sqldf')
install.packages("sqldf")
library(googleVis)
library(sqldf)
Fruits
sqldf('select*from Fruits where Fruit='apples')
sqldf('select*from Fruits where Fruit='Apples')
sqldf("'select*from Fruits where Fruit='Apples'")
sqldf(" 'SELECT * FROM Fruits WHERE Fruit='Apples' ")
Fruits
sqldf("'SELECT * FROM Fruits WHERE Fruit='Apples' ")
library(sqldf)
install.packages('sqldf')
install.packages("sqldf")
install.packages('sqldf')
library(sqldf)
library(googleVis)
Fruits
sqldf("'SELECT * FROM Fruits WHERE Fruit='Apples' ")
library(sqldf)
sqldf('select * from Fruits LIMIT 3,5')
sqldf('select * from Fruits LIMIT 3')
sqldf('select * from Fruits WHERE Fruit=\'Apples\'')
sqldf('select * from Fruits order by year')
sqldf('select * from Fruits order by year desc')
sqldf('select * from Fruits order by year desc')
sqldf('select sum(sales) from Fruits')
sqldf('select sum(sales) from Fruits group_by Fruits')
sqldf('select sum(sales) from Fruits group_by Fruit')
sqldf('select fruit, sum(sales) from Fruits group_by Fruit')
sqldf('select Fruits, sum(sales) from Fruits group_by Fruit')
sqldf('select Fruits, sum(sales) from Fruits group_by fruit')
sqldf('select Fruits, sum(sales) from Fruits group by fruit')
sqldf('select Fruit, sum(sales) from Fruits group by fruit')
sqldf('select Fruit, sum(sales), sum(expenses), sum(profit) from Fruits group by fruit')
sqldf('select Fruit, avg(sales), avg(expenses), avg(profit) from Fruits group by year')
sqldf('select year, avg(sales), avg(expenses), avg(profit) from Fruits group by year')
sqldf('select year, avg(sales), avg(expenses), avg(profit) from Fruits group by fruit')
sqldf('select year, avg(sales), avg(expenses), avg(profit) from Fruits group by year')
sqldf('select year, avg(sales), avg(expenses), avg(profit) from Fruits group by year order by profit desc')
sqldf('select year, avg(sales), avg(expenses), avg(profit) from Fruits group by year order by avg(profit) desc')
sqldf('select Fruit, max(sales), min(sales)')
sqldf('select * from fruits max(sales), min(sales)')
sqldf('select * from Fruits max(sales), min(sales)')
sqldf('select max(sales), min(sales)')
sqldf('select max(sales), min(sales)' from Fruits)
sqldf('select max(sales), min(sales) from Fruits')
sqldf('select min(sales), max(sales) from Fruits')
sqldf('select * from Fruits WHERE sales=81')
sqldf('select * from Fruits WHERE sales=81')
sqldf('select * from Fruits WHERE sales=111')
sqldf('select * from Fruits WHERE sales=81')
sqldf('select * from Fruits WHERE sales=
(select min(sales) from Fruits')
sqldf('select * from Fruits WHERE sales=
(select min(sales) from Fruits'))
sqldf('select * from Fruits WHERE sales=
(select min(sales) from Fruits)')
sqldf('select * from Fruits WHERE expenses=
(select max(expenses) from Fruits)')
sqldf('select * from Fruits WHERE sales in
(select min(sales), max(sales) from Fruits)')
sqldf('select * from Fruits WHERE sales in > 81')
sqldf('select * from Fruits WHERE sales in (select sales >95)')
sqldf('select * from Fruits WHERE sales in (select sales > 95)')
sqldf('select * from Fruits WHERE sales in (select sales > 91)')
sqldf('select * from Fruits WHERE sales in (select sales > 50)')
sqldf('select * from Fruits WHERE sales in (select sales from Fruits > 50)')
sqldf('select * from Fruits WHERE sales in (select sales from Fruits where sales > 50)')
sqldf('select * from Fruits WHERE sales in (select sales from Fruits where sales > 90)')
song <- read.csv("song.csv")
song <- read.csv("song.csv");song
song <- (read.csv("song.csv"),header=T);song
song <- (read.csv("song.csv"),header=F);song
song <- read.csv("song.csv",header = T);song
song <- read.csv("song.csv",header = F);song
song <- read.csv("song.csv",header = F, fileEncoding = utf8);song
song <- read.csv("song.csv",header = F, fileEncoding = 'utf8');song
names(song) <-c('_id','title','lyrics','girl_group_id')
song
girl_group <- read.csv("girl_group", fileEncoding = 'utf8');girl_group
girl_group <- read.csv("girl_group");girl_group
girl_group <- read.csv("girl_group.csv",fileEncoding = 'utf8');girl_group
girl_group <- read.csv("girl_group.csv",fileEncoding = 'utf8',header = F);girl_group
names(girl_group) <- c('_id','name','debut')
girl_group
names(girl_group) <- c('_id','name','debut');girl_group
sqldf('select gg._id, gg.name AS '걸그룹 이름', s.title AS '제목')
sqldf("select gg._id, gg.name AS '걸그룹 이름', s.title AS '제목'")
sqldf("select gg._id, gg.name AS '걸그룹 이름', gg.debut AS '데뷰', s.title AS '제목'")
sqldf("select gg._id, gg.name AS '걸그룹 이름', gg.debut AS '데뷰', s.title AS '제목'
from girl_group AS gg
inner join song as s
on gg._id = s.girl_group_id")
sqldf("select gg._id, gg.name AS '걸그룹 이름', gg.debut AS '데뷰', s.title AS '제목'
from girl_group AS gg
inner join song as s
on gg._id = s.girl_group_id")
sqldf("select gg._id, gg.name, gg.debut, s.title
from girl_group AS gg
inner join song as s
on gg._id = s.girl_group_id")
sqldf("select gg._id, gg.name, gg.debut, s.title
from girl_group AS gg
right join song as s
on gg._id = s.girl_group_id")
sqldf("select gg._id, gg.name, gg.debut, s.title
from girl_group AS gg
inner join song as s
on gg._id = s.girl_group_id")
sqldf("select gg._id, gg.name, gg.debut, s.title
from girl_group AS gg
join song as s
on gg._id = s.girl_group_id")
sqldf("select gg._id, gg.name, gg.debut, s.title
from girl_group gg
join song s
on gg._id = s.girl_group_id")
