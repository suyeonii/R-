data2,data3 %>% arrange(hwy)
data2data3 %>% arrange(hwy)
data2 data3 %>% arrange(hwy)
%>% arrange(hwy)
data2<-filter(data1,displ<4)%>%
summarise(avarage=mean(hwy,na.rm=T))%>%
data3<-filter(data1,displ>5)%>%
summarise(avarage=mean(hwy,na.rm=T))%>%
arrange(hwy)
data2<-filter(data1,displ<4)%>%
summarise(avarage=mean(hwy,na.rm=T))%>%
data3<-filter(data1,displ>5)%>%
summarise(avarage=mean(hwy,na.rm=T))%>%
arrange(hwy)
filter(data1,audi,toyota)%>%
select(data1,manufacturer)%>%
select(data1,manufacturer)%>%
filter(data1,audi,toyota)%>%
data4<-select(data1,manufacturer)%>%
filter(data1,audi,toyota)%>%
group_by(manufacturer)
data4<-select(data1,audi,toyota)%>%
data4<-select(data1,audi,toyota);data4
data1 %>%
select(manufacturer)%>%
filter(manufacturer==audi|manufacturer=toyota)
data1 %>%
select(manufacturer)%>%
filter(manufacturer==audi|manufacturer=toyota)
data1 %>%
select(manufacturer'audi','toyota')%>%
filter(manufacturer==audi|manufacturer=toyota)
data1 %>%
select(manufacturer'audi','toyota')%>%
filter(manufacturer==audi|manufacturer==toyota)
data1 %>%
select(manufacturer'audi','toyota')%>%
"chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다.
group_by(manufacturer)%>%select(audi,toyota)
data1<-
group_by(manufacturer)%>%select(audi,toyota)
data1%>%
group_by(manufacturer)%>%select(audi,toyota)
data1%>%
group_by(manufacturer)
data1%>%
group_by(manufacturer)%>%select('audi','toyota')
filter(class == audi)
filter(class == 'audi'')
filter(class == 'audi') %>%
filter(class == 'toyota')
filter(class == 'audi') %>%
filter(class == 'toyota')
filter(class == 'audi') %>%
filter(class == 'toyota')
data2<-filter(data1,displ<4)%>%
summarise(avarage=mean(hwy,na.rm=T))%>%
data3<-filter(data1,displ>5)%>%
summarise(avarage=mean(hwy,na.rm=T))%>%
data2<-filter(data1,displ<4)%>%
summarise(avarage=mean(hwy,na.rm=T))%>%
data3<-filter(data1,displ>5)%>%
summarise(avarage=mean(hwy,na.rm=T))
data2<-filter(data1,displ<4)%>%
summarise(avarage=mean(hwy,na.rm=T))
data2<-filter(data1,displ<4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3<-filter(data1,displ>5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
mpg_audi <- mpg %>%
filter(manufacturer == "audi")
mpg_toyota <- mpg %>%
filter(manufacturer == "toyota")
mean(mpg_audi$hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi")
mpg_toyota <- mpg %>%
filter(manufacturer == "toyota")
mean(mpg_audi$hwy)
mean(mpg_toyota$hwy)
mpg_chevrolet <- mpg %>%
filter(manufacturer == "chevrolet")
mpg_ford <- mpg %>%
filter(manufacturer == "ford")
mpg_honda <- mpg %>%
filter(manufacturer == "honda")
mean(mpg_chevrolet$hwy)
mean(mpg_ford$hwy)
mean(mpg_honda$hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi")
mpg_toyota <- mpg %>%
filter(manufacturer == "toyota")
mean(mpg_audi$cty)
mean(mpg_toyota$cty)
head(mpg_new)
mpg_new <- mpg %>%
select(class, cty)
head(mpg_new)
data2<-filter(data1,displ<4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3<-filter(data1,displ>5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
data2<-filter(data1,displ=<4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3<-filter(data1,displ>=5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
data2<-filter(data1,displ<=4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3<-filter(data1,displ=>5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
data2<-filter(data1,displ<=4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3<-filter(data1,displ>=5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
mean(data2$hwy)
data2 <- mpg %>%
filter(data1,displ<=4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3 <- mpg %>%
filter(data1,displ>=5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
data2 <- mpg %>%
filter(displ<=4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3 <- mpg %>%
filter(displ>=5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
mean(data2$hwy)
mean(data3$hwy)
data2 <- mpg %>%
filter(displ<=4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3 <- mpg %>%
filter(displ>=5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
mean(data2$hwy)
mean(data3$hwy)
mpg_a <- mpg %>%
select(class,suv)
mpg_a <- mpg %>%
filter(class=='suv')
mpg_a <- mpg %>%
filter(class=='suv') %>%
filter(class=='compact')
mpg_a <- mpg %>%
filter(class=='suv') %>%
filter(class=='compact');mpg_a
pg_a <- mpg %>%
filter(class=='suv') %>%
filter(class=='compact');mpg_a
mpg_a
mpg_a <- mpg %>%
select(suv)
mpg_a <- mpg %>%
select('suv')
mpg_a <- mpg %>%
select(class==suv)
mpg_a <- mpg %>%
select(class,cty)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)%>%
head(5)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)%>%
print(5)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)%>%
head(5)
head(5)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange('hwy')
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange($hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
select(mpg_audi,hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
select(mpg,hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(mpg_audi,hwy)
mpg_audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg-audi <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy);mpg_audi1
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(hwy)%>% head(5) ;mpg_audi1
mpg_audi <- mpg %>%
filter(manufacturer == "audi")
mpg_toyota <- mpg %>%
filter(manufacturer == "toyota")
mean(mpg_audi$cty)
mean(mpg_toyota$cty)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
mpg_a <- mpg %>%
select(class,cty)
mpg_a <- mpg %>%
select(class,cty);mpg_a
mpg_a <- mpg %>%
select(class=='suv')
mpg_a <- mpg %>%
select(mpg_new)
mpg0 <- cp mpg
mpg0 <- cp mpg.data1
.data1
cp mpg
cp.mpg
mpg <- as.data.frame(ggplot2::mpg)  # mpg 데이터 불러오기
df <- mpg %>% select(class, cty)    # class, cty 변수 추출
head(df)
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(desc(hwy))%>% head(5) ;mpg_audi1
mpg_new <- mpg                                    # 복사본 만들기
mpg_new <- mpg_new %>% mutate(total = cty + hwy)  # 합산 변수 만들기
mpg_new <- mpg_new %>% mutate(mean = total/2)
mpg_new <- mpg_new %>% mutate(mean = total/2) ; mpg_new
arrange(desk(mean)) %>% head(3)
arrange(desc(mean)) %>% head(3)
mpg_new %>%
arrange(desc(mean)) %>% head(3)
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T)) %>%
arrange(desc(mean))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T)) %>%
arrange(desc(cty))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T)) %>%
arrange(desc(mean))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T))
mpg %>%
group_by(class) %>%
summarise(average = mean(cty,na.rm=T)) %>%
arrange(desc(mean_cty))
mpg %>%
group_by(class) %>%
summarise(mean_cty = mean(cty,na.rm=T)) %>%
arrange(desc(mean_cty))
mpg %>%
group_by(manufacturer) %>%
summarise(avarage=mean(hwy,na.rm=T))
mpg %>%
group_by(manufacturer) %>%
summarise(avarage=mean(hwy,na.rm=T))%>%
head(3)
mpg %>%
group_by(manufacturer) %>%
summarise(count_n(),compact)
mpg %>%
group_by(manufacturer) %>%
summarise(count.n(),compact)
mpg %>%
group_by(manufacturer) %>%
summarise(count=n(),compact)
mpg %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
filter('compact')
mpg %>%
group_by(manufacturer) %>%
filter('compact') %>%
summarise(count=n())%>%
mpg %>%
group_by(manufacturer) %>%
filter('compact') %>%
summarise(count=n())%>%
arrange(desc(n))
mpg %>%
group_by(manufacturer) %>%
filter('compact') %>%
summarise(count=n())%>%
arrange(desc(mean))
mpg %>%
group_by(manufacturer) %>%
filter('compact') %>%
summarise(count=n())%>%
arrange(desc(count))
mpg %>%
filter('compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
source('~/.active-rstudio-document', encoding = 'UTF-8')
mpg %>%
filter('compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
data2 <- mpg %>%
filter(displ<=4)%>%
summarise(avarage=mean(hwy,na.rm=T));data2
data3 <- mpg %>%
filter(displ>=5)%>%
summarise(avarage=mean(hwy,na.rm=T));data3
mpg_audi <- mpg %>%
filter(manufacturer == "audi")
mpg_toyota <- mpg %>%
filter(manufacturer == "toyota")
mean(mpg_audi$cty)
mean(mpg_toyota$cty)
mpg_4 %>%
filter(class %in% c('suv','compact')) %>%
group_by(class)  %>%
summarise(average=mean(cty))
mpg_new %>%
filter(class %in% c('suv','compact')) %>%
group_by(class)  %>%
summarise(average=mean(cty))
mpg_audi1 <- mpg %>%
filter(manufacturer == "audi") %>%
arrange(desc(hwy))%>% head(5) ;mpg_audi1
mpg %>%
filter(manufacturer == 'audi') %>%
select(manufacturer,model,hwy) %>%
arrange(desc(hwy)) %>%
head(5)
mpg %>%
group_by(manufacturer) %>%
summarise(avarage=mean(hwy,na.rm=T))%>%
arrange(desc(avarage)) %>%
head(3)
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(count=n())%>%
arrange(desc(count))
install.packages("reshape2")
library(reshape2)
fruits
fruits
library(reshape2)
library('freshape2')
library('reshape2')
fruits
install.packages("reshape2")
install.packages("reshape2")
library('reshape2')
fruits
frui
fruits
library("reshape2")
fruits
install.packages("googleVis")
library(googleVis)
fruits
fruits
library(reshape2)
fruits
print fruits
print(fruits)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
fruits
install.packages("reshape2")
library(reshape2)
fruits
Fruits
Fruits
library(googleVis)
Fruits
fruits
melt(fruits,id='year')
melt(Fruits,id='year')
melt(Fruits,id=year)
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
fruits
Fruits
library(googleVis)
Fruits
fruits
fruits
melt(Fruits,id='year')
Fruits
melt(Fruits,id='year')
melt(Fruits,id='Year')
melt(fruits.id=c('year','name'))
melt(Fruits.id=c('Year','Name'))
melt(Fruits.id=c('Year','name'))
melt(Fruits.id=c('year','name'))
melt(fruits.id=c('year','name'))
fruits_10
fruits_10
read.csv(fruits_10)
read.csv(fruits_10.csv)
read.csv(fruits_10.csv)
read.csv(Fruits_10.csv)
read.csv(fruits_10.csv)
library(reshape2)
Fruits
fruits
install.packages("reshape2")
install.packages("reshape2")
install.packages("stringr")
library(stringr)
fruits<-c('apple','Apple','banana','pineapple')
str_detect(fruits,'A')
str_detect(fruits,'^a')
str_detect(fruits,'e$')
str_detect(fruits,'^[aA]')
str_detect(fruits,'a')
str_detect(fruits,'[aA]')
str_detect(fruits.ignore.case('a'))
str_detect(fruits.ignore.case("a"))
str_detect(fruits,ignore.case("a"))
str_detect(fruits,ignore.case('a'))
str_detect(ignore.case('a'))
str_detect(fruits,ignore.case(a))
str_detect(fruits,regex('a'),ignore.case=T)
str_detect(fruits,regex'a',ignore.case=T)
str_detect(fruits,regex('a',ignore.case=T)
str_detect(fruits,regex('a',ignore.case=T))
str_detect(fruits, regex('a', ignore.case=T))
str_detect(fruits, regex('a', ignore_case=T))
str_detect(fruits,ignore_case('a'))
str_detect(fruits,ignore_case'a')
str_detect(fruits, regex('a', ignore_case=T))
fruits
str_count()
str_count(fruits.ignore_case('a')
str_count(fruits,'a')
str_count(fruits, 'a')
str_count(fruits.ignore_case('a')
str_count(fruits.ignore_case 'a')
str_count(fruits.ignore.case 'a')
str_c("apple","banana")
str_c("Fruits: ",fruits)
str_c(fruits," name is ",fruits)
str_c(fruits,collapse="")
str_c(fruits,collapse="-")
str_c(fruits,collapse="&")
str_c(fruits,collapse="-")
str_dup(fruits,3)
str_dup(fruits,2)
str_length('apple')
str_length('fruits')
str_length(fruits)
str_length('fruits')
str_dup(fruits,3)
str_length('apple')
str_length('fruits')
str_length(fruits)
str_locate('apple','a')
str_length('과일')
str_locate(fruits,'a')
str_locate('apple','app')
str_replace('apple','p','*')
str_replace('apple','p','**')
str_replace_all('apple','p','*')
fruits <- str_c('apple','/','orange','/','banana')
fruits <- str_c('apple','/','orange','/','banana');fruits
str_split(fruits,"/")
fruits
str_sub(fruits,start=1,end=3)
str_sub(fruits,start=6,end=9)
str_sub(fruits,start=-5)
str_trim('apple banana berry')
str_trim('  apple banana berry  ')
str_sub(fruits,start=7)
str_trim('\t   apple banana berry  ')
str_trim('  apple banana berry  \n  apple banana berry  ')
apple banana berry
str_trim('  apple banana berry  \n  ')
source('~/.active-rstudio-document', encoding = 'UTF-8')
